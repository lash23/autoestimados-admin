{"version":3,"file":"src_app_pages_auth_login_login_module_ts.js","mappings":";;;;;;;;;;;;;AAAA,iEAAe,u5BAAu5B;;;;;;;;;;;;;;;;;;;ACA73B;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACmB;AAErB;AAEmB;AAEvB;IAY5B,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAV3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,+DAAmB;YACnB,uDAAW;YACX,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACpBsB;AACkB;AAC3B;AACwB;IAOpD,SAAS,SAAT,SAAS;IAEpB,YACU,EAAe,EACf,aAA4B,EAC5B,MAAc;QAFd,OAAE,GAAF,EAAE,CAAa;QACf,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAE3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;SACpC,CAAC;IACJ,CAAC;CACF;;YAjCQ,uDAAW;YAEX,mEAAa;YADb,mDAAM;;AAQF,SAAS;IALrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,wQAAgC;;KAEjC,CAAC;GACW,SAAS,CAwBrB;AAxBqB","sources":["./src/app/pages/auth/login/login.page.html","./src/app/pages/auth/login/login-routing.module.ts","./src/app/pages/auth/login/login.module.ts","./src/app/pages/auth/login/login.page.ts"],"sourcesContent":["export default \"<ion-content>\\n  <ion-card class=\\\"login-container\\\">\\n    <ion-card-header>\\n      <ion-card-title>Autoestiamdos</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">E-Mail <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n          <ion-input required formControlName=\\\"email\\\" type=\\\"text\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Password <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n          <ion-input required formControlName=\\\"password\\\" type=\\\"password\\\"></ion-input>\\n        </ion-item>\\n        <ion-button block color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\">\\n          Login\\n        </ion-button>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { GlobalService } from '../../../services/global.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  loginForm: FormGroup\n  constructor(\n    private fb: FormBuilder,\n    private globalService: GlobalService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.innitLoginForm();\n  }\n\n  onSubmit() {\n    this.globalService.login();\n\n    this.router.navigate(['/estimates']);\n  }\n\n  innitLoginForm() {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n    })\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}